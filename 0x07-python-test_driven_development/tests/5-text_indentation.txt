>>> text_indentation = __import__('5-text_indentation').text_indentation

=======================================================================
Traceback (most recent call last):
TypeError: text must be a string
=======================================================================

>>> text_indentation(1)
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation((1))
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation(None)
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation([])
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation({})
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation({'a': 1})
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation((1,))
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation([[], [], []])
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation([[6, 6, 6], [6, 6, 6], [6, 6, 6]])
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation([[6], [6, 6], [6, 6, 6]])
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation([[6], [6, 6], [6]])
Traceback (most recent call last):
TypeError: text must be a string

# output check
>>> text_indentation("Victor Nguyen")
Victor Nguyen

# output check for space and string
>>> text_indentation("Victor .Nguyen")
Victor .
<BLANKLINE>
Nguyen

# missing one argument check
>>> text_indentation()
Traceback (most recent call last):
TypeError: text_indentation() missing 1 required positional argument: 'text'
